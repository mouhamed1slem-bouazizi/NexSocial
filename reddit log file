Publishing to 1 accounts: [ 'reddit:suareztn' ]
üìé Processed 1 media files
üöÄ Posting to reddit:suareztn...
üî¥ Posting to Reddit for account suareztn (attempt 1)
üìù Content: test post video to reddit
üìé Media items: 1
üéØ Subreddit settings: { selectedSubredditId: 'ad51859c-a9f7-4508-8269-6a915f4dc9f1' }
üéØ Using selected subreddit: r/freetalkk
üñºÔ∏è Processing media item for Imgur upload: {
  name: 'Pas2ow - Barcha Rjel  ÿ®ÿ±ÿ¥ÿß ÿ±ÿ¨ÿßŸÑ (Officiel Video Clip ) @dextah.mp4',
  type: 'video'
}
üìπ Starting native Reddit video upload...
üìπ Requesting video upload lease from Reddit...
üìπ Raw lease response from Reddit: {
  "args": {
    "action": "//reddit-uploaded-video.s3-accelerate.amazonaws.com",
    "fields": [
      {
        "name": "x-amz-algorithm",
        "value": "AWS4-HMAC-SHA256"
      },
      {
        "name": "x-amz-date",
        "value": "20250717T054215Z"
      },
      {
        "name": "x-amz-storage-class",
        "value": "STANDARD"
      },
      {
        "name": "success_action_status",
        "value": "201"
      },
      {
        "name": "bucket",
        "value": "reddit-uploaded-video"
      },
      {
        "name": "acl",
        "value": "public-read"
      },
      {
        "name": "x-amz-signature",
        "value": "26638c6c0ddcb33aedc68882835a8551a9db108d12c3f4b88911a17aa32afaa6"
      },
      {
        "name": "x-amz-security-token",
        "value": "IQoJb3JpZ2luX2VjEFYaCXVzLWVhc3QtMSJIMEYCIQDQ64KPKM4cbFMcDfRwNfJtbMsteZMOcKWGaHbXCLjo8wIhALvjKp35HVJN+1XuBp9Y18xmPOJLNF+k67XcKA8N3yOZKqcCCG8QABoMMjEwMjQ2MzI2MzMxIgzBUjonI8C7REwFgLYqhAICyrD/qQPianZ8A3Lo2GUBVnXLNkG1ZIfAcRuuMYtvdcSMG1dPF6pquJC6UByZASR3rY2U+kxKHgpmyHTADt1mkwRtV0J3LdHZfxyZOD4nOaqhPdYscDgjr19PkO9RjIAcCGYpyGmLTa6EM8I+wm9LBLFDuw+/UnR6T1Endvx7Ogd/As6Nm7OHw3tuqaEFMm8F7zjt2sQ9MeqET8k7u9is3lhkSzqJFrIe4OvYmfkXtFdIZg1IEMugaJc26VSWz3ihKNfRlz5rVeXqERt2sQR6Pia3o81DmgpH4AVhgBPQVsx/JNPvtDXR3DXlp7oPKh2FWhOJ/IR93+Bnm2L2tUTFbtwMaDDuluLDBjqcAf+XpEvw424f2knU6uynscy8FUF+pXoD37ihRJgOoj5faOOWhftcxg+FKUensX7iiHPa0Ln2gcr1EoQeq3QG64C1G+knDcTEDV0/gosXv38IrNfnAbDhuzQx0ZN+cf/N4NsVM3dhxXgLN5xFXBKm2xDNMNxOMkFalTikOEycvlSEDnGOnSEme1kBx1Q7KZV/J4DRHkz7ScE5kyXQeA=="
      },
      {
        "name": "key",
        "value": "h39rqjaygddf1"
      },
      {
        "name": "x-amz-meta-ext",
        "value": "mp4"
      },
      {
        "name": "policy",
        "value": "eyJleHBpcmF0aW9uIjoiMjAyNS0wNy0xN1QwNTo1NzoxNS40NTJaIiwiY29uZGl0aW9ucyI6W1siZXEiLCIkeC1hbXotc2VjdXJpdHktdG9rZW4iLCJJUW9KYjNKcFoybHVYMlZqRUZZYUNYVnpMV1ZoYzNRdE1TSklNRVlDSVFEUTY0S1BLTTRjYkZNY0RmUndOZkp0Yk1zdGVaTU9jS1dHYUhiWENMam84d0loQUx2aktwMzVIVkpOKzFYdUJwOVkxOHhtUE9KTE5GK2s2N1hjS0E4TjN5T1pLcWNDQ0c4UUFCb01NakV3TWpRMk16STJNek14SWd6QlVqb25JOEM3UkV3RmdMWXFoQUlDeXJEL3FRUGlhblo4QTNMbzJHVUJWblhMTmtHMVpJZkFjUnV1TVl0dmRjU01HMWRQRjZwcXVKQzZVQnlaQVNSM3JZMlUra3hLSGdwbXlIVEFEdDFta3dSdFYwSjNMZEhaZnh5Wk9ENG5PYXFoUGRZc2NEZ2pyMTlQa085UmpJQWNDR1lweUdtTFRhNkVNOEkrd205TEJMRkR1dysvVW5SNlQxRW5kdng3T2dkL0FzNk5tN09IdzN0dXFhRUZNbThGN3pqdDJzUTlNZXFFVDhrN3U5aXMzbGhrU3pxSkZySWU0T3ZZbWZrWHRGZElaZzFJRU11Z2FKYzI2VlNXejNpaEtOZlJsejVyVmVYcUVSdDJzUVI2UGlhM284MURtZ3BINEFWaGdCUFFWc3gvSk5QdnREWFIzRFhscDdvUEtoMkZXaE9KL0lSOTMrQm5tMkwydFVURmJ0d01hRER1bHVMREJqcWNBZitYcEV2dzQyNGYya25VNnV5bnNjeThGVUYrcFhvRDM3aWhSSmdPb2o1ZmFPT1doZnRjeGcrRktVZW5zWDdpaUhQYTBMbjJnY3IxRW9RZXEzUUc2NEMxRytrbkRjVEVEVjAvZ29zWHYzOElyTmZuQWJEaHV6UXgwWk4rY2YvTjROc1ZNM2RoeFhnTE41eEZYQkttMnhETk1OeE9Na0ZhbFRpa09FeWN2bFNFRG5HT25TRW1lMWtCeDFRN0taVi9KNERSSGt6N1NjRTVreVhRZUE9PSJdLFsiZXEiLCIkc3VjY2Vzc19hY3Rpb25fc3RhdHVzIiwiMjAxIl0sWyJlcSIsIiR4LWFtei1tZXRhLWV4dCIsIm1wNCJdLFsiZXEiLCIkeC1hbXotZGF0ZSIsIjIwMjUwNzE3VDA1NDIxNVoiXSxbImVxIiwiJHgtYW16LWNyZWRlbnRpYWwiLCJBU0lBVEI0NUlMQTVTM0VKWTNOUy8yMDI1MDcxNy91cy1lYXN0LTEvczMvYXdzNF9yZXF1ZXN0Il0sWyJlcSIsIiR4LWFtei1zdG9yYWdlLWNsYXNzIiwiU1RBTkRBUkQiXSxbImVxIiwiJHgtYW16LWFsZ29yaXRobSIsIkFXUzQtSE1BQy1TSEEyNTYiXSxbImVxIiwiJGJ1Y2tldCIsInJlZGRpdC11cGxvYWRlZC12aWRlbyJdLFsiZXEiLCIkYWNsIiwicHVibGljLXJlYWQiXSxbImVxIiwiJGtleSIsImgzOXJxamF5Z2RkZjEiXSxbImVxIiwiJENvbnRlbnQtVHlwZSIsInZpZGVvL21wNCJdLFsiY29udGVudC1sZW5ndGgtcmFuZ2UiLCAxLCAxMDczNzQxODI0XV19"
      },
      {
        "name": "x-amz-credential",
        "value": "ASIATB45ILA5S3EJY3NS/20250717/us-east-1/s3/aws4_request"
      },
      {
        "name": "Content-Type",
        "value": "video/mp4"
      }
    ]
  },
  "asset": {
    "asset_id": "h39rqjaygddf1",
    "processing_state": "incomplete",
    "payload": {
      "filepath": "video-1752730935346.mp4"
    },
    "websocket_url": "wss://k8s-lb.wss.redditmedia.com/h39rqjaygddf1?m=AQAAj494aNzyuvB5_6BDZMNbDeW3-4MbNzfdFwHZW5TmRPxOUuS3"
  }
}
‚¨ÜÔ∏è Uploading video to signed S3 URL...
üîó Asset URL from S3: https://reddit-uploaded-video.s3-accelerate.amazonaws.com/h39rqjaygddf1
üìù Submitting video post to Reddit...
‚úÖ Video post submitted successfully to Reddit.
üìä Reddit submit response: {
  "json": {
    "errors": [
      [
        "BAD_URL",
        "The video_poster_url can't be empty",
        "video_poster_url"
      ]
    ]
  }
}
‚ùå Reddit video upload failed.
Error message: Reddit API returned errors: [["BAD_URL","The video_poster_url can't be empty","video_poster_url"]]
‚ùå Native Reddit video upload failed: Reddit API returned errors: [["BAD_URL","The video_poster_url can't be empty","video_poster_url"]]
üîÑ Falling back to Imgur upload for video.
‚òÅÔ∏è Starting media upload to Imgur...
üé¨ Uploading media to Imgur...
‚úÖ Media uploaded to Imgur successfully
‚úÖ Media uploaded to Imgur successfully: https://i.imgur.com/cirSuih.mp4
üîó Posting media link to Reddit: {
  api_type: 'json',
  kind: 'link',
  sr: 'freetalkk',
  title: 'test post video to reddit',
  url: 'https://i.imgur.com/cirSuih.mp4',
  sendreplies: true
}
‚úÖ Media post successful
üìä Reddit response: {
  json: {
    errors: [],
    data: {
      url: 'https://www.reddit.com/r/freetalkk/comments/1m1zh3p/test_post_video_to_reddit/',
      drafts_count: 0,
      id: '1m1zh3p',
      name: 't3_1m1zh3p'
    }
  }
}
‚úÖ Incrementing success count for subreddit
‚úÖ Successfully posted to reddit:suareztn
üìä Posting complete: 1/1 successful